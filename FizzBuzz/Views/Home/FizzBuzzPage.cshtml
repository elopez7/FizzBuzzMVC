@model FizzBuzz.Models.FizzBuzzModel

<div class="container col-xxl-8 px-4 py-4 py-5 mt-5">
    <div class="row gy-2 h-100 row-cols-md-2 row-cols-1">
        <div class="col border-2 border-end">
            <h1 class="fw-bold lh-1 mb-3">FizzBuzz</h1>
            <h4 class="lead">
                Become a Spartan warrior one loop at a time!
                This is a C# coding exercise using loops and MVC.
                Write a short program that displays each number from 1 to 300.
                For each multiple of fizz value, display "Fizz" instead of the number.
                For each multiple of buzz value, display "Buzz" instead of the number.
                For numbers which are multiples of both fizz and buzz, display "FizzBuzz" instead of the number.
            </h4>

            <h2 class="mt-5 border-bottom border-2">Instructions</h2>
            <p>
                Enter a value for fizz and a value for buzz. Press the button and a table with results will appear.
            </p>
        </div>
        <div class="col">
            <div>
                <h5>Enter Numbers</h5>
                @*Form Goes here*@
                <form asp-controller="Home" asp-action="FizzBuzzPage" method="post">
                    <div class="form-group">
                        <label asp-for="FizzValue">Fizz Value</label>
                        <input type="number" min="1" asp-for="FizzValue" class="form-control" placeholder="Enter Fizz" required value=@Model.FizzValue />
                    </div>
                    <div class="form-group">
                        <label asp-for="BuzzValue">Buzz Value</label>
                        <input type="number" min="1" asp-for="BuzzValue" class="form-control" placeholder="Enter Buzz" required value=@Model.BuzzValue />
                    </div>
                    <div class="form-group mt-3">
                        <button type="submit" class="btn btn-dark">Submit</buttton>
                    </div>
                </form>

                <div class="col">
                    <h2 class="mt-5 border-bottom border-2">Results</h2>
                    <div class="table-responsive">
                        @*Table goes here*@
                        @if (Model.Result.Count > 0)
                        {
                            <table class="table-striped table-hover table table-dark">
                                <thead>
                                    <tr><th colspan="10">Fizz Buzz Results</th></tr>
                                </thead>
                                @for (int i = 0; i < Model.Result.Count(); i += 10)
                                {
                                    <tr>
                                        <td data-color-code="@(Model.Result[i].ToString().ToLower())">@Model.Result[i]</td>
                                        <td data-color-code="@(Model.Result[i + 1].ToString().ToLower())">@Model.Result[i + 1]</td>
                                        <td data-color-code="@(Model.Result[i + 2].ToString().ToLower())">@Model.Result[i + 2]</td>
                                        <td data-color-code="@(Model.Result[i + 3].ToString().ToLower())">@Model.Result[i + 3]</td>
                                        <td data-color-code="@(Model.Result[i + 4].ToString().ToLower())">@Model.Result[i + 4]</td>
                                        <td data-color-code="@(Model.Result[i + 5].ToString().ToLower())">@Model.Result[i + 5]</td>
                                        <td data-color-code="@(Model.Result[i + 6].ToString().ToLower())">@Model.Result[i + 6]</td>
                                        <td data-color-code="@(Model.Result[i + 7].ToString().ToLower())">@Model.Result[i + 7]</td>
                                        <td data-color-code="@(Model.Result[i + 8].ToString().ToLower())">@Model.Result[i + 8]</td>
                                        <td data-color-code="@(Model.Result[i + 9].ToString().ToLower())">@Model.Result[i + 9]</td>
                                    </tr>
                                }
                            </table>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>